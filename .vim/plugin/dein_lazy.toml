# Created:     2018/03/07 21:59:29
# Last Change: 2018/09/14 23:30:15.

# 統合ユーザインターフェース
[[plugins]]
repo = 'Shougo/denite.nvim'
# if = "has('nvim')"
if = "has('python3')"
hook_source = '''
    call denite#custom#map('insert', '<c-n>', '<denite:move_to_next_line>', 'noremap')
    call denite#custom#map('insert', '<c-p>', '<denite:move_to_previous_line>', 'noremap')
    call denite#custom#var('file_rec', 'command', ['rg', '--files'])
    call denite#custom#source('file_rec', 'matchers', ['matcher_regexp'])
'''
depends = 'neomru.vim'
on_i = 1
on_cmd = 'Denite'

[[plugins]]
repo = 'Shougo/unite.vim'
# MEMO: "Denite" 動作テスト完了後に以下を復帰して "Unite" 使用完了
# if = "!has('python3')"
depends = 'neomru.vim'
# "unite.vim" 用 "Colorscheme" プレビュー
# Ul: :Unite colorscheme でプレビュー
[[plugins]]
repo = 'ujihisa/unite-colorscheme'
# "unite.vim" 用フォントプレビュー
# ":Unite font" でプレビュー
# FIXME: ↑ 何も表示されない
[[plugins]]
repo = 'ujihisa/unite-font'
# 英和・和英辞書
[[plugins]]
repo = 'rhysd/unite-codic.vim'
[[plugins]]
repo = 'koron/codic-vim'
# Denite | Unite用mru
[[plugins]]
repo = 'Shougo/neomru.vim'
# MEMO: "NeoVim" では無駄なディレクトリが生成される
if = "!has('nvim')"
on_source = 'denite.nvim'
on_source = 'dein.vim'
on_path = '.*'

# 入力補完
# 最新
[[plugins]]
repo = 'Shougo/deoplete.nvim'
# if = "has('nvim')"
if = "has('python3')"
depends = 'context_filetype.vim'
depends = 'roxma/nvim-yarp'
depends = 'roxma/vim-hug-neovim-rpc'
on_i = 1
# MEMO: キルしてテスト
# ↓ いる？
# hook_add = 'let g:deoplete#enable_at_startup = 1'
[[plugins]]
repo = 'roxma/nvim-yarp'
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
# 2番目に新しい
[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "!has('python3')"
if = "has('lua')"
on_i = 1
# 最古
# [[plugins]] #  {{{
# repo = 'Shougo/neocomplcache.vim'
# if = "!has('python3')"
# on_i = 1
# }}}

# スニペット
[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)
    xmap <C-k> <Plug>(neosnippet_expand_target)
        if has('conceal')
            set conceallevel=2 concealcursor=niv
        endif
'''
depends = ['neosnippet-snippets']
on_i = 1
on_ft = ['snippet']
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# 非同期処理
[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'

# "NeoVim" の "Terminal" ラッパープラグイン
#[[plugins]]
repo = 'kassio/neoterm'
if = "has('nvim')"

# # Python用プラグイン
# [[plugins]]
# repo = 'davidhalter/jedi-vim'
# on_ft = 'python'
# # Pythonシンタックスハイライト
# [[plugins]]
# repo = 'pfdevilliers/Pretty-Vim-Python'
# on_ft = 'python'
# 構文チェッカー
[[plugins]]
repo = 'w0rp/ale'
# # [[plugins]]
# # repo = 'scrooloose/syntastic'
# on_ft = 'python'
# # Python自動折りたたみ
# # [[plugins]]
# # repo = 'vim-scripts/python_fold'
# # on_ft = 'python'

# Markdown
# プレビュー
# <Leader>md: 編集中のファイルをブラウザで表示
[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['markdown','mkd']
[[plugins]]
repo = 'tyru/open-browser.vim'
on_ft = ['markdown','mkd']
# MEMO: ↓エラーになる
# hook_add = '''
#   let g:previm_open_cmd = 'C:\\Program\ Files\ (x86)\\Google\\Chrome\\Application\\chrome.exe'
# '''
# シンタックスハイライト 1
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown','mkd']
# # シンタックスハイライト 2
# [[plugins]]
# repo = 'rcmdnk/vim-markdown'
# on_ft = ['markdown','mkd']
# hook_add = '''
#   let g:vim_markdown_frontmatter = 1
#   let g:vim_markdown_math = 1
# '''

# Fuzzy Matcher
[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'
[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
    command! -bang -nargs=* Rg
      \ call fzf#vim#grep(
      \   'rg --line-number --no-heading '.shellescape(<q-args>), 0,
      \   fzf#vim#with_preview({'options': '--exact --reverse'}, 'right:50%:wrap'))
'''

# コピペ 履歴保存
# MEMO: 弊害が多いので "YankRnkg" -> "yankround" に変更
# "yankround" が使えないので一旦中止
# ヤンク後に "<Ctrl>p/<Ctrl>n" でヤンク履歴を選択
[[plugins]]
# repo = 'vim-scripts/YankRing.vim'
# if = "!has('nvim')"
# < http://lambdalisue.hatenablog.com/entry/2013/06/23/071344 >
repo = 'LeafCage/yankround.vim'

# フォントのサイズ変更
[[plugins]]
repo = 'thinca/vim-fontzoom'
on_cmd = ['Fontzoom']
on_map = ['<Plug>(fontzoom-']
gui = 1

# TODO: 動作確認 # {{{
# # カラーコード プレビュー
# [[plugins]]
# repo = 'gorodinskiy/vim-coloresque'

# # Arduino開発用プラグイン
# [[plugins]]
# repo = "platformio/platformio"
# on_ft = "arduino"
# # Arduinoシンタックスハイライト
# [[plugins]]
# repo = "sudar/vim-arduino-syntax"
# on_ft = "arduino"

# TODO: 導入予定
# }}}
