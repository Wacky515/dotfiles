# Created:     2018/03/07 21:59:29
# Last Change: 2018/09/14 13:34:28.
# "github.com" のリポジトリを指定し、"Plugin" を追加

# "dein.vim" 本体
[[plugins]]
repo = 'Shougo/dein.vim'

# 辞書
[[plugins]]
repo = 'thinca/vim-ref'

# ファイラー
# :VimFiler で起動 # {{{
    # o: バッファを縦分割 or ディレクトリ同期
    # O: 別バッファに選択中のディレクトリの中を展開
    # gs: セーフモード ON/OFF
    # q: 終了
# }}}
[[plugins]]
repo = 'Shougo/vimfiler'
# <Leader>o: ファイラ起動
[[plugins]]
repo = 'scrooloose/nerdtree'
[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
[[plugins]]
repo = 'ryanoasis/vim-devicons'
# ,sp: ファイラ起動
[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
if = "!has('nvim')"

# "VimShell"
# ",s: :VimShell" で起動
[[plugins]]
repo = 'Shougo/vimshell'
if = "!has('nvim')"

# The Silver Searcher
[[plugins]]
repo = 'rking/ag.vim'

# The Platinum Searcher
[[plugins]]
repo = 'nazo/pt.vim'

# 置換強化
[[plugins]]
repo = 'osyo-manga/vim-over'

# "Git" 用プラグイン
[[plugins]]
repo = 'tpope/vim-fugitive'
# 追加、削除マーカ表示
[[plugins]]
repo = 'airblade/vim-gitgutter'
# "git log" を強化
# :Agit 強化版"git log" 実行
[[plugins]]
repo = 'cohama/agit.vim'
# "gitk" 機能追加
# :Gitv: "gitk" 実行
[[plugins]]
repo = 'gregsexton/gitv'
depends = 'fugitive'
# # コミットログ入力をサポート
[[plugins]]
repo = 'rhysd/committia.vim'

# Undo履歴
# F4: :GundoToggle Undo履歴起動
[[plugins]]
repo = 'sjl/gundo.vim'

# Diff
# :DirDiff A B AとBを比較
[[plugins]]
repo = 'vim-scripts/DirDiff.vim'

# ステータスライン ビジュアル強化
[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['vim-fugitive', 'majutsushi/tagbar']
# < http://itchyny.hatenablog.com/entry/20130828/1377653592 >
# どの関数の中にいるか表示
[[plugins]]
repo = 'majutsushi/tagbar'

# インデント カラー化
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

# カーソル移動の拡張
[[plugins]]
repo = 'lokaltog/vim-easymotion'

# ウィンドウサイズ変更 簡便化
# <Ctrl>e: ウィンドウリサイズ開始
[[plugins]]
repo = 'simeji/winresizer'

# # コマンドラインで "Emacs" キーバインド
# コピペができないのでKILL
# [[plugins]]
# repo = 'houtsnip/vim-emacscommandline'

# コメントON/OFF トグル
[[plugins]]
repo = 'tomtom/tcomment_vim'

# "%" で移動を強化（*.htmlのタグなど）
[[plugins]]
repo = 'tmhedberg/matchit'

# マークをビジュアル化
[[plugins]]
repo = 'jacquesbh/vim-showmarks'

# vim上で計算機機能
# コマンドモードで ":Calc" で計算開始
# "Python" 必要
[[plugins]]
repo = 'gregsexton/VimCalc'

# タイムスタンプを挿入
#  "Last Change: ." を記入する
[[plugins]]
repo = 'vim-scripts/autodate.vim'

# 日付のインクリメント・デクリメント
# FIXME: yyyy/mm/dd 形式は対応していない
[[plugins]]
repo = 'tpope/vim-speeddating'

# 選択したテキストを'""'、"()"、"[]"などで囲む
[[plugins]]
repo = 'tpope/vim-surround'

# スネークケースやキャメルケースへの変換
    # ノーマルモードで # {{{
        # crs: "SnakeCase"  → "snake_case"
        # crm: "mixed_case" → "MixedCase"
        # crc: "camel_case" → "camelCase"
        # cru: "upper_case" → "UPPER_CASE"
# }}}
[[plugins]]
repo = 'tpope/vim-abolish'

# "=" を自動的に " = " にする
[[plugins]]
repo = 'kana/vim-smartchr'

# テキスト整形
# 対象行を選択し "ga" -> "整形対象" ->  "デリミタ" を入力
[[plugins]]
repo = 'junegunn/vim-easy-align'

# "*.toml" シンタックスハイライト
[[plugins]]
repo  = 'cespare/vim-toml'
on_ft = 'toml'

# カレンダー
[[plugins]]
repo = 'itchyny/calendar.vim'

# # 関数、クラス、変数、構造体、列挙型、マクロ定義など 一覧表示
# ":TlistOpen" で開始
[[plugins]]
repo = 'vim-scripts/taglist.vim'

# カーソル位置のコンテキストの "filetype" を自動切替
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
# カーソル位置のコンテキストの "filetype" を自動判定
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# # "true"/"false"、"yes"、"no"、"on"/"off" などをトグル
# [[plugins]]
# repo = 'toggle.vim'

# カラースキーマ
# [[plugins]]
# repo = 'chriskempson/vim-tomorrow-theme'
# # if = "has('linux')"
# hook_add = '''
#     set background=dark
#     au MyAutoCmd VimEnter * nested colorscheme tomorrow-theme
#     '''
# [[plugins]]
# repo = 'sjl/badwolf'
# # if = "!has('nvim') && hostname() == 'ProSalad133.local'"
# hook_add = '''
#     set background=dark
#     au MyAutoCmd VimEnter * nested colorscheme badwolf
#     '''
# [[plugins]]
# repo = 'vim-scripts/twilight'
# # if = "has('nvim') && hostname() == 'ProSalad133.local'"
# hook_add = '''
#     set background=dark
#     au MyAutoCmd VimEnter * nested colorscheme twilight
#     '''
# [[plugins]]
# repo = 'nanotech/jellybeans.vim'
# # if = "has('nvim') && hostname() == 'SALADCARBONX1'"
# hook_add = '''
#     set background=dark
#     au MyAutoCmd VimEnter * nested colorscheme jellybeans
#     '''
# [[plugins]]
# repo = 'tomasr/molokai'
# # if = "has('nvim') && hostname() == 'HBAMB748A'"
# hook_add = '''
#     set background=dark
#     au MyAutoCmd VimEnter * nested colorscheme molokai
#     '''
# [[plugins]]
# repo = 'w0ng/vim-hybrid'
# # if = "!has('nvim') && hostname() == 'SALADCARBONX1'"
# hook_add = '''
#     set background=dark
#     " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
#     " 但し Colorscheme イベントの発生が抑制されないよう nested を付ける。
#     au MyAutoCmd VimEnter * nested colorscheme hybrid
#     '''
[[plugins]]
repo = 'cocopon/iceberg.vim'

if = "has('gui_running')"
# if = "!has('nvim')"
# if = "!has('nvim') && hostname() == 'HBAMB748A'"
hook_add = '''
    set termguicolors
    set background=dark
    au MyAutoCmd VimEnter * nested colorscheme iceberg
    au MyAutoCmd VimEnter * highlight Visual ctermbg=216
    '''

# ---------------------------------------------------------------------------
# 動作確認中 新規導入プラグイン
# ---------------------------------------------------------------------------
# テーブル作成
# ":TableModeToggle" で開始
[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

# チートシート表示
# ":Cheat" でプレビュー
[[plugins]]
repo = 'reireias/vim-cheatsheet'

# アイコン表示
# "lightline" 拡張用
[[plugins]]
repo = 'ryanoasis/vim-devicons'

# 導入予定 # {{{
# japanese doc
# [[plugins]]
# repo = 'vim-jp/vimdoc-ja'
# on_ft = 'help'

# "ctags" 自動更新
# https://github.com/soramugi/auto-ctags.vim

# テンプレート作成
# [[plugins]]
# repo = 'thinca/vim-template'
# < http://lambdalisue.hatenablog.com/entry/2013/06/23/071344 >
# }}}

# 削除予定
