# Created:     2018/12/19 08:50:01
# Last Change: 2019/01/08 15:28:48.
# TODO: "hook_post_source"、"hook_post_source" を "*.vim" に移管

# 統合ユーザインターフェース
[[plugins]]
repo = 'Shougo/denite.nvim'
if = "has('python3')"
depends = ['neomru.vim']
# MEMO: ↓は "*.vim" に移管できない
hook_source = '''  " {{{
    " プロンプトを ">" にする
    call denite#custom#option('default', 'prompt', '>')
    call denite#custom#option('default', 'direction', 'top')

    " <C-n>/<C-p>: 上下移動
    call denite#custom#map('normal',
                \ '<C-n>', '<denite:move_to_next_line>')
    call denite#custom#map('normal',
                \ '<C-p>', '<denite:move_to_previous_line>')
    call denite#custom#map('insert',
                \ '<C-n>', '<denite:move_to_next_line>')
    call denite#custom#map('insert',
                \ '<C-p>', '<denite:move_to_previous_line>')

    " <C-j>/<C-k>: 入力履歴移動
    call denite#custom#map('insert',
                \ '<C-j>', '<denite:assign_next_text>')
    call denite#custom#map('insert',
                \ '<C-k>', '<denite:assign_previous_text>')

    " <C-t>: "tabopen"
    call denite#custom#map('insert',
                \ "<C-t>", '<denite:do_action:tabopen>')
    " <C-v>: "vsplit"
    call denite#custom#map('insert',
                \ "<C-v>", '<denite:do_action:vsplit>')
    call denite#custom#map('normal',
                \ "v", '<denite:do_action:vsplit>')

    " jj :ノーマルモード
    call denite#custom#map('insert',
                \ 'jj', '<denite:enter_mode:normal>')
    " <C-s>: 水平画面分割して開く
    call denite#custom#map('insert',
                \ '<C-s>', '<denite:do_action:split>')
    " <C-i>: 垂直画面分割して開く
    call denite#custom#map('insert',
                \ '<C-i>', '<denite:do_action:vsplit>')
    " <C-o>: 新規タブで開く
    call denite#custom#map('insert',
                \ '<C-o>', '<denite:do_action:tabopen>')

    " "file_rec" 検索時に "FuzzyMatch" を有効にし
    " 検索対象から指定のファイルを除外
    call denite#custom#source(
                \ 'file_rec', 'matchers',
                \ ['matcher_fuzzy',
                \ 'matcher_project_files',
                \ 'matcher_ignore_globs'])

    " 検索対象外のファイル指定
    call denite#custom#filter('matcher_ignore_globs',
                \ 'ignore_globs',
                \ [ '.git/', 'build/',
                \ '.ropeproject/', '__pycache__/',
                \ 'venv/', 'images/', 'img/',
                \ 'fonts/', 'img/', 'fonts/',
                \ 'images/', '*.o', '*.make', '*.min.*'])

    " "Grep" に "RipGrep" を使用
    if executable('rg')
        call denite#custom#var('file_rec', 'command',
                \ ['rg', '--files', '--glob', '!.git'])
        call denite#custom#var('grep', 'command', ['rg'])
    endif
'''  # }}}
on_i = 1
on_cmd = ['Denite']
# "Denite|Unite" 用 "Source" 郡
# "Colorscheme" プレビュー
    # Ul: :Unite colorscheme でプレビュー
    # Dl: :Denite colorscheme でプレビュー
# "Denite|Unite" 用 "mru"
[[plugins]]
repo = 'Shougo/neomru.vim'
# DONE: "NeoVim" では無駄なディレクトリが生成される
# if = "!has('nvim')"
on_source = ['dein.vim', 'unite.vim', 'denite.nvim']
on_path = '.*'
[[plugins]]
repo = 'koron/codic-vim'
# "NyaoVim" と "OniVim" で必要
[[plugins]]
repo = 'Shougo/unite.vim'

# 入力補完
# 最新
[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = "has('nvim')"
# if = "has('python3')"
on_i = 1
hook_add = '''  " {{{
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#auto_complete_delay = 0
'''  # }}}
on_event = ['InsertCharPre']
hook_source = '''  " {{{
    inoremap <expr><C-h> deoplete#smart_close_popup()."\<C-h>"
    inoremap <expr><C-l> deoplete#complete_common_string()
    inoremap <expr><C-i> deoplete#complete_common_string()
    inoremap <expr><tab> pumvisible() ? "\<C-n>" :
                \ neosnippet#expandable_or_jumpable() ?
                \ "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"

    let g:deoplete#auto_complete_start_length = 1
    let g:deoplete#enable_camel_case = 0
    let g:deoplete#enable_smart_case = 1
    let g:deoplete#enable_ignore_case = 0
    let g:deoplete#enable_refresh_always = 0
    let g:deoplete#file#enable_buffer_path = 1
    let g:deoplete#max_list = 10000
'''  # }}}
[[plugins]]
repo = 'Shougo/deoplete-rct'
[[plugins]]
repo = 'Shougo/neco-vim'
[[plugins]]
repo = 'Shougo/neco-syntax'
[[plugins]]
repo = 'ujihisa/neco-look'

# 構文解析
[[plugins]]
repo = 'w0rp/ale'
if = "has('job') && has('channel') && has('timers')"
[[plugins]]
repo = 'scrooloose/syntastic'
if = "!has('job') || !has('channel') || !has('timers')"

# スニペット
[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1
on_ft = ['snippet']
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# "NeoVim" の "Terminal" ラッパープラグイン
[[plugins]]
repo = 'kassio/neoterm'
if = "has('nvim')"

# Markdown
# プレビュー
[[plugins]]
repo = 'kannokanno/previm'
# MEMO: markdownしか対応していない
on_ft = ['markdown','mkd']
[[plugins]]
repo = 'tyru/open-browser.vim'
# MEMO: markdownしか対応していない
on_ft = ['markdown','mkd']
# シンタックスハイライト
[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['markdown','mkd']
hook_add = '''
  let g:vim_markdown_frontmatter = 1
  let g:vim_markdown_math = 1
'''

# Fuzzy Matcher
[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'
[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
hook_add = '''
    command! -bang -nargs=* Rg
      \ call fzf#vim#grep(
      \ 'rg --line-number --no-heading '.shellescape(<q-args>), 0,
      \ fzf#vim#with_preview({'options': '--exact --reverse'},
      \ 'right:50%:wrap'))
'''

# フォントのサイズ変更
[[plugins]]
repo = 'thinca/vim-fontzoom'
# on_cmd = ['Fontzoom']
# on_map = ['<Plug>(fontzoom-']
gui = 1

